<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>로그인 페이지</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #021545;
        }
        .login-container {
            max-width: 400px;
            margin: auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .logo {
            text-align: center;
        }

        .password-requirements {
            font-size: 12px;  /* 글자 크기 조절 */
            color: #E40087;  /* 초기 색상 빨간색 */
            margin-top: 5px;
            padding-left: 0; /* 기본 리스트 들여쓰기 제거 */
            list-style: none;
        }

        .password-requirements li {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .valid {
            color: #18AD72 !important; /* 충족되면 초록색 */
        }

        .password-input {
            width: 100%; /* 입력 필드의 너비를 맞추기 */
        }
        .btn-primary-custom{
             background-color: rgba(184, 185, 186, 0.3) !important;
              border: 1px solid #a0a1a2;
        }

    </style>
</head>
<body>

    <div class="container-fluid">
        <div class="logo">
            <img src="/assets/img/sAlieN_logo.png" alt="SAIEAIS CRM" class="img-fluid" style="width: 350px; height: auto;">
        </div>
        <div class="login-container">
            <h3 class="text-center">로그인</h3>

            <form action="/user-login" enctype="application/x-www-form-urlencoded" method="POST">
                <div class="form-group">
                    <label for="username">아이디</label>
                    <input type="text" class="form-control" id="username" name="username" placeholder="아이디" required>
                </div>
                <div class="form-group">
                    <label for="password">암호</label>
                    <input type="password" class="form-control" id="password" name="password" placeholder="암호" required>
                </div>
                <button type="submit" class="btn btn-primary-custom btn-block">로그인</button>
                <!-- 로그인 실패 시 메시지 표시 -->
                {{#error}}
                    <div id="error-message" style="color: red; text-align: center;">
                        <p>아이디 또는 비밀번호가 일치하지 않습니다.</p>
                    </div>
                {{/error}}
            </form>
            <div class="text-center mt-3">
                <a href="#" data-bs-toggle = "modal" data-bs-target="#passwordModal">비밀번호 찾기</a>
            </div>
            <div class="text-center">
                <a href="/signup">회원가입</a>
            </div>
        </div>
    </div>
    <!-- 비밀번호 수정 모달 -->
    <div class="modal fade" id="passwordModal" tabindex="-1" aria-labelledby="passwordModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="passwordModalLabel">비밀번호 찾기</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="password-form" action="/password-edit" method="POST">
                        <div class="mb-3">
                            <label for="employee-id" class="form-label">사원번호</label>
                            <input type="text" class="form-control" name="employeeId" id="employee-id" required>
                        </div>
                        <div class="mb-3">
                            <label for="exist-password" class="form-label">기존 비밀번호</label>
                            <input type="password" class="form-control" name="existPassword" id="exist-password" required>
                        </div>
                        <div class="mb-3">
                            <label for="new-password" class="form-label">새 비밀번호</label>
                            <input type="password" class="form-control" name="newPassword" id="new-password" onkeyup="validatePassword()" required>
                            <ul id="passMsg" class="password-requirements">
                                <li id="lengthCheck">❌ 최소 8자 이상</li>
                                <li id="upperCaseCheck">❌ 최소 1개의 대문자 포함</li>
                                <li id="lowerCaseCheck">❌ 최소 1개의 소문자 포함</li>
                                <li id="numberCheck">❌ 최소 1개의 숫자 포함</li>
                                <li id="specialCharCheck">❌ 최소 1개의 특수문자 (!@#$%^&*) 포함</li>
                            </ul>
                        </div>
                        <div class="mb-3">
                            <label for="confirm-password" class="form-label">새 비밀번호 확인</label>
                            <input type="password" class="form-control" id="confirm-password" onkeyup="passConfirm()" required>
                            <span id="confirmMsg"></span>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                            <button type="submit" class="btn btn-primary">저장</button>
                        </div>
                        <div id="error-message" class="text-danger mt-2" style="display: none;"></div>
                    </form>
                </div>
            </div>
        </div>
    </div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function() {
        const errorMessage = $('#error-message');
        if (errorMessage.length) {
            setTimeout(function() {
                errorMessage.fadeOut('slow');
            }, 3000);
        }
    });

    function validatePassword() {
        const password = document.getElementById("new-password").value;
        const lengthCheck = password.length >= 8;
        const upperCaseCheck = /[A-Z]/.test(password);
        const lowerCaseCheck = /[a-z]/.test(password);
        const numberCheck = /[0-9]/.test(password);
        const specialCharCheck = /[!@#$%^&*]/.test(password);

        const correctColor = "green";
        const wrongColor = "red";

        function updateCheck(elementId, condition) {
            const element = document.getElementById(elementId);
            element.innerHTML = condition ? "✅ " + element.innerHTML.slice(2) : "❌ " + element.innerHTML.slice(2);
            element.style.color = condition ? correctColor : wrongColor;
        }

        updateCheck("lengthCheck", lengthCheck, "최소 8자 이상");
        updateCheck("upperCaseCheck", upperCaseCheck, "최소 1개의 대문자 포함");
        updateCheck("lowerCaseCheck", lowerCaseCheck, "최소 1개의 소문자 포함");
        updateCheck("numberCheck", numberCheck, "최소 1개의 숫자 포함");
        updateCheck("specialCharCheck", specialCharCheck, "최소 1개의 특수문자 (!@#$%^&*) 포함");

        document.getElementById("passMsg").style.display = (lengthCheck && upperCaseCheck && lowerCaseCheck && numberCheck && specialCharCheck) ? "none" : "block";
    }

    function passConfirm() {
        const password = document.getElementById("new-password").value;
        const confirmPassword = document.getElementById("confirm-password").value;
        const confirmMsg = document.getElementById("confirmMsg");

        confirmMsg.innerHTML = password === confirmPassword ? "✅ 비밀번호 일치" : "❌ 비밀번호 불일치";
        confirmMsg.style.color = (password === confirmPassword) ? "green" : "red";
    }

    // 모달이 열릴 때 이벤트 처리
    const passwordModal = document.getElementById('passwordModal');
    passwordModal.addEventListener('show.bs.modal', function (event) {
        // // 버튼에서 data-id 속성을 가져옴
        // const button = event.relatedTarget;
        // const userId = button.getAttribute('data-id');
        //
        // // 숨겨진 input 필드에 userId 값을 설정
        // const userIdInput = document.getElementById('modal-userId');
        // userIdInput.value = userId;
    });

    $(document).ready(function () {
        $('#password-form').on('submit', function (e) {
            e.preventDefault(); // 기본 폼 동작 방지

            // 비밀번호 유효성 검사
            if (!isPasswordValid()) {
                $('#error-message').text('비밀번호가 요구사항을 충족하지 않습니다.').fadeIn();
                setTimeout(function () {
                    $('#error-message').fadeOut();
                }, 3000);
                return; // 조건 충족되지 않으면 서버 요청 중단
            }

            const formData = {
                employeeId: $('#employee-id').val(),
                existPassword: $('#exist-password').val(),
                newPassword: $('#new-password').val(),
            };

            // 서버에 비동기 요청 전송
            $.ajax({
                url: '/password-find',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    alert(response); // 서버에서 반환된 성공 메시지 사용
                    $('#passwordModal').modal('hide');
                },
                error: function (xhr) {
                    if (xhr.status === 400) {
                        const errorMessage = xhr.responseText;
                        $('#error-message').text(errorMessage).fadeIn();
                        setTimeout(function () {
                            $('#error-message').fadeOut();
                        }, 3000);
                    } else {
                        $('#error-message').text('서버와의 통신 중 문제가 발생했습니다.').fadeIn();
                    }
                }
            });
        });
    });

    // 비밀번호 유효성 검사 함수
    function isPasswordValid() {
        const password = $('#new-password').val();
        return password.length >= 8 &&
               /[A-Z]/.test(password) &&
               /[a-z]/.test(password) &&
               /[0-9]/.test(password) &&
               /[!@#$%^&*]/.test(password);
    }

</script>
</body>
</html>
